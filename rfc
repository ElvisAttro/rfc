#! /usr/bin/env bash
#
# rfc
#
# Author: Baptiste Fontaine
# License: MIT
# Version: 0.0.5
#
# URI: github.com/bfontaine/rfc
#

__rfc() {

    local VERSION='0.0.5'
    local PAGER=${PAGER:-less}
    local fetch_cmd='curl'
    local rfc_dir="$HOME/.RFCs"

    print_rfc() {
        $PAGER "$rfc_dir/$1"
    }

    get_rfc() {
        case $fetch_cmd in
            curl)
                curl -fs http://www.rfc-editor.org/rfc/rfc${1}.txt \
                    > "$rfc_dir/${1}"; return $? ;;

            wget)
                wget -q http://www.rfc-editor.org/rfc/rfc${1}.txt \
                    -O "$rfc_dir/${1}"; return $? ;;

        esac
    }

    init_rfc_dir() {

        mkdir -p $rfc_dir
        touch $rfc_dir/_404s

    }

    print_usage() {
        echo "Usage:
    $0 --version # display the version number and exit
    $0 --help    # display this text and exit

    $0 <number>  # display the RFC <number>
    $0 clear     # clear the cache"
    }

    print_version() {
        echo "rfc v$VERSION - github.com/bfontaine/rfc"
    }

    ###

    if [ $# -eq 0 ]; then
        print_usage
        return
    fi

    which curl > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        which wget > /dev/null 2>&1

        if [ $? -ne 0 ]; then
            echo "Error: You need Wget or cURL!"
            return 1
        fi

        fetch_cmd='wget'

    fi

    init_rfc_dir

    case "$1" in

        -v|--version)
            print_version
            return ;;

        -h|--help)
            print_usage
            return ;;

        -*)
            echo "Unrecognized option: $1"
            print_usage
            return 1;;

        clear)
            rm -rf $rfc_dir
            return ;;

        _404s)
            print_usage
            return 1;;

        *)
        grep -q "^$1\$" $rfc_dir/_404s 2> /dev/null
        if [ $? -eq 0 ]; then

            echo "There's no such RFC."
            return 1

        elif [ ! -f "$rfc_dir/$1" ]; then

            get_rfc $1

            if [ $? -eq 22 ]; then

                echo "$1" >> "$rfc_dir/_404s"
                echo "There's no such RFC."

                [ ! -s "$rfc_dir/$1" ] && rm -f "$rfc_dir/$1"

                return 1
            fi

        fi
    
        print_rfc $* ;;
    esac

}

__rfc $*

